<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="40" failures="0" name="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" time="0.02" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="14.0.2+12"/>
    <property name="sun.boot.library.path" value="C:\Program Files\AdoptOpenJDK\jdk-14.0.2.12-hotspot\bin"/>
    <property name="maven.multiModuleProjectDirectory" value="D:\Computer_Science\Dawson\Semester_5\Software_Dev_Project\project2\math_parser"/>
    <property name="java.vm.vendor" value="AdoptOpenJDK"/>
    <property name="java.vendor.url" value="https://adoptopenjdk.net/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=";"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="user.script" value=""/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="D:\Computer_Science\Dawson\Semester_5\Software_Dev_Project\project2\math_parser"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="java.runtime.version" value="14.0.2+12"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\c4i44\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="maven.ext.class.path" value="E:\devapp\NetBeans-12.0\netbeans\java\maven-nblib\netbeans-eventspy.jar"/>
    <property name="classworlds.conf" value="E:\devapp\NetBeans-12.0\netbeans\java\maven\bin\..\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\AdoptOpenJDK\jdk-14.0.2.12-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\AdoptOpenJDK\jdk-14.0.2.12-hotspot\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\app\c4i44\product\18.0.0\dbhomeXE\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files (x86)\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Maven\apache-maven-3.6.3\bin;C:\Program Files\PostgreSQL\13\bin;C:\Users\c4i44\AppData\Local\Microsoft\WindowsApps;C:\Users\c4i44\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\c4i44\AppData\Local\atom\bin;D:\Maven\apache-maven-3.6.3\bin;;C:\Users\c4i44\AppData\Local\Microsoft\WindowsApps;D:\Heroku\bin;D:\PyCharm\PyCharm 2020.3\bin;;."/>
    <property name="maven.conf" value="E:\devapp\NetBeans-12.0\netbeans\java\maven\bin\../conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="58.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="library.jansi.path" value="E:\devapp\NetBeans-12.0\netbeans\java\maven\bin\..\lib\jansi-native"/>
    <property name="user.home" value="C:\Users\c4i44"/>
    <property name="user.timezone" value="America/Toronto"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="14"/>
    <property name="user.name" value="c4i44"/>
    <property name="java.class.path" value="E:\devapp\NetBeans-12.0\netbeans\java\maven\bin\..\boot\plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="14"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -Dmaven.ext.class.path=E:\devapp\NetBeans-12.0\netbeans\java\maven-nblib\netbeans-eventspy.jar -Dfile.encoding=UTF-8"/>
    <property name="java.home" value="C:\Program Files\AdoptOpenJDK\jdk-14.0.2.12-hotspot"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="14.0.2"/>
    <property name="java.vendor" value="AdoptOpenJDK"/>
    <property name="maven.home" value="E:\devapp\NetBeans-12.0\netbeans\java\maven\bin\.."/>
    <property name="file.separator" value="\"/>
    <property name="java.version.date" value="2020-07-14"/>
    <property name="java.vendor.url.bug" value="https://github.com/AdoptOpenJDK/openjdk-support/issues"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="java.vendor.version" value="AdoptOpenJDK"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[0 calculation[[2, +, 3, *, 4]]=[2, 3, 4, *, +]]]" time="0.002"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[0 calculation[[2, +, 3, *, 4]]=[2, 3, 4, *, +]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[1 calculation[[(, 2, +, 3, ), *, 4]]=[2, 3, +, 4, *]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[1 calculation[[(, 2, +, 3, ), *, 4]]=[2, 3, +, 4, *]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[2 calculation[[(, (, 2, +, 3, ), *, (, 2, +, 3, ), )]]=[2, 3, +, 2, 3, +, *]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[2 calculation[[(, (, 2, +, 3, ), *, (, 2, +, 3, ), )]]=[2, 3, +, 2, 3, +, *]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[3 calculation[[(, (, 2, +, 3, ), *, 2, +, (, 2, +, 3, ), )]]=[2, 3, +, 2, *, 2, 3, +, +]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[3 calculation[[(, (, 2, +, 3, ), *, 2, +, (, 2, +, 3, ), )]]=[2, 3, +, 2, *, 2, 3, +, +]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[4 calculation[[(, (, 2, +, 3, ), *, 2, +, (, 2, +, 3, *, 3, ), )]]=[2, 3, +, 2, *, 2, 3, 3, *, +, +]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[4 calculation[[(, (, 2, +, 3, ), *, 2, +, (, 2, +, 3, *, 3, ), )]]=[2, 3, +, 2, *, 2, 3, 3, *, +, +]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[5 calculation[[2, +, -3.15]]=[2, -3.15, +]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[5 calculation[[2, +, -3.15]]=[2, -3.15, +]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[6 calculation[[-(, 2, +, 3, )]]=[-1, 2, 3, +, *]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[6 calculation[[-(, 2, +, 3, )]]=[-1, 2, 3, +, *]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[7 calculation[[4, +, (, 1, ), +, 3]]=[4, 1, +, 3, +]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[7 calculation[[4, +, (, 1, ), +, 3]]=[4, 1, +, 3, +]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[8 calculation[[+(, 3, +, 4, ), (, 3, *, 2, )]]=[3, 4, +, 3, 2, *, *]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[8 calculation[[+(, 3, +, 4, ), (, 3, *, 2, )]]=[3, 4, +, 3, 2, *, *]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[9 calculation[[+(, 3, +, 4, ), (, 3, *, 2, )]]=[3, 4, +, 3, 2, *, *]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[9 calculation[[+(, 3, +, 4, ), (, 3, *, 2, )]]=[3, 4, +, 3, 2, *, *]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[10 calculation[[(, (, 7, *, 2, (, 5, -, 3, ), *, 5, ), /, 4, )]]=[7, 2, *, 5, 3, -, *, 5, *, 4, /]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[10 calculation[[(, (, 7, *, 2, (, 5, -, 3, ), *, 5, ), /, 4, )]]=[7, 2, *, 5, 3, -, *, 5, *, 4, /]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[11 calculation[[9, *, 8, *, 7, *, 6, *, 5, *, 4, *, 3, /, 2]]=[9, 8, *, 7, *, 6, *, 5, *, 4, *, 3, *, 2, /]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[11 calculation[[9, *, 8, *, 7, *, 6, *, 5, *, 4, *, 3, /, 2]]=[9, 8, *, 7, *, 6, *, 5, *, 4, *, 3, *, 2, /]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[12 calculation[[5, (, 5, *, 5, /, 12.5, ), +, 9]]=[5, 5, 5, *, 12.5, /, *, 9, +]]]" time="0.003"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[12 calculation[[5, (, 5, *, 5, /, 12.5, ), +, 9]]=[5, 5, 5, *, 12.5, /, *, 9, +]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[13 calculation[[-4, *, -3, (, 5, +, 3, (, 5, +, 3, ), )]]=[-4, -3, *, 5, 3, 5, 3, +, *, +, *]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[13 calculation[[-4, *, -3, (, 5, +, 3, (, 5, +, 3, ), )]]=[-4, -3, *, 5, 3, 5, 3, +, *, +, *]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[14 calculation[[(, 9, +, 2, ), (, 5, +, 3, ), (, 66, /, 2, )]]=[9, 2, +, 5, 3, +, *, 66, 2, /, *]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[14 calculation[[(, 9, +, 2, ), (, 5, +, 3, ), (, 66, /, 2, )]]=[9, 2, +, 5, 3, +, *, 66, 2, /, *]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[15 calculation[[75, *, 2, (, 75, /, 3, ), (, 12, *, 3, )]]=[75, 2, *, 75, 3, /, *, 12, 3, *, *]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[15 calculation[[75, *, 2, (, 75, /, 3, ), (, 12, *, 3, )]]=[75, 2, *, 75, 3, /, *, 12, 3, *, *]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[16 calculation[[10, *, 9, /, 8, *, 7, /, 6, *, 5, /, 4, *, 3, /, 2]]=[10, 9, *, 8, /, 7, *, 6, /, 5, *, 4, /, 3, *, 2, /]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[16 calculation[[10, *, 9, /, 8, *, 7, /, 6, *, 5, /, 4, *, 3, /, 2]]=[10, 9, *, 8, /, 7, *, 6, /, 5, *, 4, /, 3, *, 2, /]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[17 calculation[[(, 3, +, 2, ), (, -3, -, 3, -, 3, )]]=[3, 2, +, -3, 3, -, 3, -, *]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[17 calculation[[(, 3, +, 2, ), (, -3, -, 3, -, 3, )]]=[3, 2, +, -3, 3, -, 3, -, *]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[18 calculation[[99, -, 98, -, 97, -, 96, (, -2, +, 5, )]]=[99, 98, -, 97, -, 96, -2, 5, +, *, -]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[18 calculation[[99, -, 98, -, 97, -, 96, (, -2, +, 5, )]]=[99, 98, -, 97, -, 96, -2, 5, +, *, -]]]" time="0"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testToPostFix[19 calculation[[(, -5, ), (, -5, ), /, 5]]=[-5, -5, *, 5, /]]]" time="0.001"/>
  <testcase classname="com.alincaia.arithmeticparserv2.ResultParserWithParenthesisTest" name="testResult[19 calculation[[(, -5, ), (, -5, ), /, 5]]=[-5, -5, *, 5, /]]]" time="0"/>
</testsuite>